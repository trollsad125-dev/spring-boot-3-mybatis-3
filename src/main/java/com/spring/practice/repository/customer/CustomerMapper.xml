<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.practice.repository.customer.CustomerMapper">
    <resultMap id = "customerResult" type="com.spring.practice.entity.Customer">
        <id property = "id" column = "id"/>
        <result property = "name" column = "name"/>
        <result property = "email" column = "email"/>
        <result property = "phoneNumber" column = "phone_number"/>
        <result property = "loyalty" column = "loyalty"/>
        <result property = "createAt" column = "create_at"/>
        <result property = "updateAt" column = "update_at"/>
        <collection property="roles" javaType="ArrayList" column="id" ofType="com.spring.practice.entity.Role" resultMap="roleResult"/>
    </resultMap>

    <resultMap id="roleResult" type="com.spring.practice.entity.Role">
        <id property="id" column="id"/>
        <result property="createAt" column="create_at"/>
        <result property="roleName" column="role_name"/>
        <result property="updateAt" column="update_at"/>
    </resultMap>
    <!--Get all customer-->
    <select id="getAllCustomer" resultMap="customerResult">
        SELECT
            *
        FROM customer
    </select>
    <!--Select Customer by Id-->
    <select id="findByCustomerId" resultMap="customerResult">
        SELECT
            *
        FROM customer
        WHERE id = #{id}
    </select>
    <!--Insert new Customer -->
    <insert id="createNewCustomer" useGeneratedKeys="true"  parameterType = "com.spring.practice.entity.Customer">
        INSERT INTO customer (
        id
         ,name
        , email
        , phone_number
        , loyalty
        , create_at
        ) VALUES (
          #{id}
        , #{name}
        , #{email}
        , #{phoneNumber}
        , #{loyalty}
        , sysdate()
        )
    </insert>

    <!--Update customer-->
    <update id="updateCustomer" parameterType="com.spring.practice.entity.Customer">
        UPDATE customer SET
        name = #{name},
        email = #{email},
        phone_number = #{phoneNumber},
        loyalty = #{loyalty},
        update_at = sysdate()
        WHERE ID = #{id};
    </update>
    <!--Delete Customer-->
    <delete id="deleteById" parameterType="int">
        DELETE from customer WHERE ID = #{id};
    </delete>
</mapper>